{"version":3,"sources":["../../../src/steps/ingest-remote-schema/index.js"],"names":["ingestRemoteSchema","helpers","pluginOptions","activity","reporter","activityTimer","start","checkIfSchemaHasChanged","introspectAndStoreRemoteSchema","identifyAndStoreIngestableFieldsAndTypes","buildNodeQueries","buildNonNodeQueries","cacheFetchedTypes","writeQueriesToDisk","e","panic","end"],"mappings":";;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,MAAMA,kBAAkB,GAAG,OAAOC,OAAP,EAAgBC,aAAhB,KAAkC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMC,QAAQ,GAAGF,OAAO,CAACG,QAAR,CAAiBC,aAAjB,CACf,wCAAkB,yBAAlB,CADe,CAAjB;AAIAF,EAAAA,QAAQ,CAACG,KAAT;;AAEA,MAAI;AACF,UAAM,wBACJ,CACEC,oCADF,EAEEC,sDAFF,EAGEC,yEAHF,EAIE,CAACC,kCAAD,EAAmBC,mEAAnB,CAJF,EAKE,CAACC,oCAAD,EAAoBC,sCAApB,CALF,CADI,EAQJZ,OARI,EASJC,aATI,CAAN;AAWD,GAZD,CAYE,OAAOY,CAAP,EAAU;AACVb,IAAAA,OAAO,CAACG,QAAR,CAAiBW,KAAjB,CAAuBD,CAAvB;AACD;;AAEDX,EAAAA,QAAQ,CAACa,GAAT;AACD,CAhCD","sourcesContent":["import { runSteps } from \"~/utils/run-steps\"\nimport { formatLogMessage } from \"~/utils/format-log-message\"\n\nimport { checkIfSchemaHasChanged } from \"./diff-schemas\"\nimport { introspectAndStoreRemoteSchema } from \"./introspect-remote-schema\"\nimport { identifyAndStoreIngestableFieldsAndTypes } from \"./identify-and-store-ingestable-types\"\nimport { buildNonNodeQueries } from \"./build-and-store-ingestible-root-field-non-node-queries\"\nimport { buildNodeQueries } from \"./build-queries-from-introspection/build-node-queries\"\nimport { cacheFetchedTypes } from \"./cache-fetched-types\"\nimport { writeQueriesToDisk } from \"./write-queries-to-disk\"\n\nconst ingestRemoteSchema = async (helpers, pluginOptions) => {\n  // @todo if this is an inc build or preview, we need quicker logic\n  // around determining if the remote schema has changed.\n  // for now, we need to do a full check each time\n  // Eventually this should happen per-Type\n  // if (helpers.traceId === `refresh-createSchemaCustomization`) {\n  //   return\n  // }\n\n  const activity = helpers.reporter.activityTimer(\n    formatLogMessage(`ingest WPGraphQL schema`)\n  )\n\n  activity.start()\n\n  try {\n    await runSteps(\n      [\n        checkIfSchemaHasChanged,\n        introspectAndStoreRemoteSchema,\n        identifyAndStoreIngestableFieldsAndTypes,\n        [buildNodeQueries, buildNonNodeQueries],\n        [cacheFetchedTypes, writeQueriesToDisk],\n      ],\n      helpers,\n      pluginOptions\n    )\n  } catch (e) {\n    helpers.reporter.panic(e)\n  }\n\n  activity.end()\n}\n\nexport { ingestRemoteSchema }\n"],"file":"index.js"}