{"version":3,"sources":["../../../src/steps/ingest-remote-schema/introspect-remote-schema.js"],"names":["introspectAndStoreRemoteSchema","state","store","getState","pluginOptions","gatsbyApi","schemaWasChanged","remoteSchema","INTROSPECTION_CACHE_KEY","url","introspectionData","key","data","query","introspectionQuery","value","typeMap","Map","__schema","types","map","type","name","dispatch","setState"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA,MAAMA,8BAA8B,GAAG,YAAY;AACjD,QAAMC,KAAK,GAAGC,eAAMC,QAAN,EAAd;;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAoBH,KAAK,CAACI,SAAhC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAuBL,KAAK,CAACM,YAAnC;AAEA,QAAMC,uBAAuB,GAAI,GAAEJ,aAAa,CAACK,GAAI,sBAArD;AACA,MAAIC,iBAAiB,GAAG,MAAM,+BAAmB;AAC/CC,IAAAA,GAAG,EAAEH;AAD0C,GAAnB,CAA9B;;AAIA,MAAI,CAACE,iBAAD,IAAsBJ,gBAA1B,EAA4C;AAC1C,UAAM;AAAEM,MAAAA;AAAF,QAAW,MAAM,2BAAa;AAClCC,MAAAA,KAAK,EAAEC;AAD2B,KAAb,CAAvB;AAIAJ,IAAAA,iBAAiB,GAAGE,IAApB,CAL0C,CAO1C;;AACA,UAAM,+BAAmB;AACvBD,MAAAA,GAAG,EAAEH,uBADkB;AAEvBO,MAAAA,KAAK,EAAEL;AAFgB,KAAnB,CAAN;AAID;;AAED,QAAMM,OAAO,GAAG,IAAIC,GAAJ,CACdP,iBAAiB,CAACQ,QAAlB,CAA2BC,KAA3B,CAAiCC,GAAjC,CAAsCC,IAAD,IAAU,CAACA,IAAI,CAACC,IAAN,EAAYD,IAAZ,CAA/C,CADc,CAAhB;;AAIAnB,iBAAMqB,QAAN,CAAehB,YAAf,CAA4BiB,QAA5B,CAAqC;AAAEd,IAAAA,iBAAF;AAAqBM,IAAAA;AAArB,GAArC;AACD,CA7BD","sourcesContent":["import store from \"~/store\"\nimport { setPersistentCache, getPersistentCache } from \"~/utils/cache\"\nimport fetchGraphql from \"~/utils/fetch-graphql\"\nimport { introspectionQuery } from \"~/utils/graphql-queries\"\n\nconst introspectAndStoreRemoteSchema = async () => {\n  const state = store.getState()\n  const { pluginOptions } = state.gatsbyApi\n  const { schemaWasChanged } = state.remoteSchema\n\n  const INTROSPECTION_CACHE_KEY = `${pluginOptions.url}--introspection-data`\n  let introspectionData = await getPersistentCache({\n    key: INTROSPECTION_CACHE_KEY,\n  })\n\n  if (!introspectionData || schemaWasChanged) {\n    const { data } = await fetchGraphql({\n      query: introspectionQuery,\n    })\n\n    introspectionData = data\n\n    // cache introspection response\n    await setPersistentCache({\n      key: INTROSPECTION_CACHE_KEY,\n      value: introspectionData,\n    })\n  }\n\n  const typeMap = new Map(\n    introspectionData.__schema.types.map((type) => [type.name, type])\n  )\n\n  store.dispatch.remoteSchema.setState({ introspectionData, typeMap })\n}\n\nexport { introspectAndStoreRemoteSchema }\n"],"file":"introspect-remote-schema.js"}