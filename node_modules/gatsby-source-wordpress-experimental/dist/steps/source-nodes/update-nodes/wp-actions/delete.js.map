{"version":3,"sources":["../../../../../src/steps/source-nodes/update-nodes/wp-actions/delete.js"],"names":["wpActionDELETE","helpers","wpAction","reporter","actions","getNode","cachedNodeIds","key","CREATED_NODE_IDS","nodeId","referencedNodeGlobalRelayID","node","typeInfo","referencedNodeSingularName","Object","entries","forEach","value","warn","panic","typeSettings","name","nodesTypeName","beforeChangeNode","additionalNodeIds","actionType","remoteNode","fetchGraphql","buildTypeName","wpStore","store","length","id","push","touchNode","deleteNode","log","info","chalk","bold","title","referencedNodeID","validNodeIds","filter","cachedId","e","JSON","stringify","Error","module","exports"],"mappings":"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","sourcesContent":["import chalk from \"chalk\"\n\nimport { formatLogMessage } from \"~/utils/format-log-message\"\nimport store from \"~/store\"\nimport {\n  getTypeSettingsByType,\n  buildTypeName,\n} from \"~/steps/create-schema-customization/helpers\"\nimport { fetchGraphql } from \"~/utils/fetch-graphql\"\nimport { getQueryInfoBySingleFieldName } from \"../../helpers\"\nimport { CREATED_NODE_IDS } from \"~/constants\"\nimport { setPersistentCache, getPersistentCache } from \"~/utils/cache\"\n\nconst wpActionDELETE = async ({\n  helpers,\n  // cachedNodeIds,\n  wpAction,\n}) => {\n  const { reporter, actions, getNode } = helpers\n\n  try {\n    let cachedNodeIds = await getPersistentCache({ key: CREATED_NODE_IDS })\n\n    // get the node ID from the WPGQL id\n    const nodeId = wpAction.referencedNodeGlobalRelayID\n\n    const node = await getNode(nodeId)\n\n    const { typeInfo } =\n      getQueryInfoBySingleFieldName(wpAction.referencedNodeSingularName) || {}\n\n    if (!typeInfo) {\n      Object.entries(wpAction).forEach(([key, value]) =>\n        reporter.warn(`${key} -> ${value}`)\n      )\n      reporter.panic(\n        formatLogMessage(\n          `Unable to perform above action. Data may be unsynched. Clear your cache and run the build process again to resync all data.`\n        )\n      )\n    }\n\n    const typeSettings = getTypeSettingsByType({\n      name: typeInfo.nodesTypeName,\n    })\n\n    if (\n      typeSettings.beforeChangeNode &&\n      typeof typeSettings.beforeChangeNode === `function`\n    ) {\n      const { additionalNodeIds } =\n        (await typeSettings.beforeChangeNode({\n          actionType: `DELETE`,\n          remoteNode: node,\n          actions,\n          helpers,\n          typeInfo,\n          fetchGraphql,\n          typeSettings,\n          buildTypeName,\n          wpStore: store,\n        })) || {}\n\n      if (additionalNodeIds && additionalNodeIds.length) {\n        additionalNodeIds.forEach((id) => cachedNodeIds.push(id))\n      }\n    }\n\n    if (node) {\n      await actions.touchNode({ nodeId })\n      await actions.deleteNode({ node })\n\n      reporter.log(``)\n      reporter.info(\n        formatLogMessage(\n          `${chalk.bold(`deleted ${wpAction.referencedNodeSingularName}`)} ${\n            wpAction.title\n          } (#${wpAction.referencedNodeID})`\n        )\n      )\n\n      reporter.log(``)\n    }\n\n    // Remove this from cached node id's so we don't try to touch it\n    const validNodeIds = cachedNodeIds.filter((cachedId) => cachedId !== nodeId)\n\n    await setPersistentCache({ key: CREATED_NODE_IDS, value: validNodeIds })\n\n    // return validNodeIds\n  } catch (e) {\n    Object.entries(wpAction).forEach(([key, value]) => {\n      reporter.warn(`${key} ${JSON.stringify(value)}`)\n    })\n    throw Error(e)\n  }\n}\n\nmodule.exports = wpActionDELETE\n"],"file":"delete.js"}