{"version":3,"sources":["../../../../src/steps/source-nodes/before-change-node/menu.js"],"names":["menuItemFetchQueue","PQueue","concurrency","Number","process","env","GATSBY_CONCURRENT_DOWNLOAD","carryoverConcurrencyCount","fetchChildMenuItems","api","remoteNode","wpStore","fetchGraphql","helpers","actions","buildTypeName","additionalNodeIds","menuItems","nodes","length","childItems","state","getState","selectionSet","remoteSchema","nodeQueries","wpUrl","pluginOptions","gatsbyApi","query","map","id","index","join","data","errorContext","remoteChildMenuItemNodes","Object","values","forEach","push","Promise","all","remoteMenuItemNode","add","type","processedNode","node","createNode","nodeType","parent","internal","contentDigest","createContentDigest","menuBeforeChangeNode","actionType","onIdle"],"mappings":"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","sourcesContent":["import PQueue from \"p-queue\"\nimport { processNode } from \"~/steps/source-nodes/create-nodes/process-node\"\n\nconst menuItemFetchQueue = new PQueue({\n  concurrency: Number(process.env.GATSBY_CONCURRENT_DOWNLOAD ?? 200),\n  carryoverConcurrencyCount: true,\n})\n\nconst fetchChildMenuItems = (api) => async () => {\n  const {\n    remoteNode,\n    wpStore,\n    fetchGraphql,\n    helpers,\n    actions,\n    buildTypeName,\n    additionalNodeIds,\n  } = api\n\n  if (\n    !remoteNode?.menuItems?.nodes?.length &&\n    !remoteNode?.childItems?.nodes?.length\n  ) {\n    // if we don't have any child menu items to fetch, skip out\n    return\n  }\n\n  const state = wpStore.getState()\n\n  const { selectionSet } = state.remoteSchema.nodeQueries.menuItems\n  const { wpUrl } = state.remoteSchema\n  const { pluginOptions } = state.gatsbyApi\n\n  const query = /* GraphQL */ `\n    fragment MENU_ITEM_FIELDS on MenuItem {\n      ${selectionSet}\n    }\n\n    query {\n      ${(remoteNode.menuItems || remoteNode.childItems).nodes\n        .map(\n          ({ id }, index) =>\n            `id__${index}: menuItem(id: \"${id}\") { ...MENU_ITEM_FIELDS }`\n        )\n        .join(` `)}\n    }`\n\n  const { data } = await fetchGraphql({\n    query,\n    errorContext: `Error occured while recursively fetching \"MenuItem\" nodes in Menu beforeChangeNode API.`,\n  })\n\n  const remoteChildMenuItemNodes = Object.values(data)\n\n  remoteChildMenuItemNodes.forEach(\n    ({ id } = {}) => id && additionalNodeIds.push(id)\n  )\n\n  await Promise.all(\n    remoteChildMenuItemNodes.map(async (remoteMenuItemNode) => {\n      // recursively fetch child menu items\n      menuItemFetchQueue.add(\n        fetchChildMenuItems({\n          ...api,\n          remoteNode: remoteMenuItemNode,\n        })\n      )\n\n      const type = buildTypeName(`MenuItem`)\n\n      const processedNode = await processNode({\n        node: remoteMenuItemNode,\n        pluginOptions,\n        wpUrl,\n        helpers,\n      })\n\n      await actions.createNode({\n        ...processedNode,\n        nodeType: `MenuItem`,\n        type: `MenuItem`,\n        parent: null,\n        internal: {\n          contentDigest: helpers.createContentDigest(remoteMenuItemNode),\n          type,\n        },\n      })\n    })\n  )\n}\n\nexport const menuBeforeChangeNode = async (api) => {\n  if (api.actionType !== `UPDATE` && api.actionType !== `CREATE`) {\n    // no need to update child MenuItems if we're not updating an existing menu\n    // if we're creating a new menu it will be empty initially.\n    return null\n  }\n\n  let additionalNodeIds = []\n\n  menuItemFetchQueue.add(fetchChildMenuItems({ ...api, additionalNodeIds }))\n\n  await menuItemFetchQueue.onIdle()\n\n  return { additionalNodeIds }\n}\n"],"file":"menu.js"}