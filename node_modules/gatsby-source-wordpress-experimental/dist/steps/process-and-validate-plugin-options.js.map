{"version":3,"sources":["../../src/steps/process-and-validate-plugin-options.js"],"names":["optionsProcessors","name","test","userPluginOptions","type","MediaItem","limit","processor","helpers","reporter","panic","excludeFields","length","excludeFieldNames","log","warn","store","dispatch","remoteSchema","addFieldsToBlackList","schema","queryDepth","useVerboseStyle","processAndValidatePluginOptions","pluginOptions","forEach","toString","filteredUserPluginOptions"],"mappings":"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","sourcesContent":["import store from \"~/store\"\nimport { formatLogMessage } from \"~/utils/format-log-message\"\nimport isInteger from \"lodash/isInteger\"\n\nconst optionsProcessors = [\n  {\n    name: `pluginOptions.type.MediaItem.limit is not allowed`,\n    test: ({ userPluginOptions }) =>\n      !!userPluginOptions?.type?.MediaItem?.limit,\n    processor: ({ helpers, userPluginOptions }) => {\n      helpers.reporter.panic(\n        formatLogMessage(\n          `PluginOptions.type.MediaItem.limit is an disallowed plugin option.\\nPlease remove the MediaItem.limit option from gatsby-config.js (currently set to ${userPluginOptions?.type?.MediaItem?.limit})\\n\\nMediaItem nodes are automatically limited to 0 and then fetched only when referenced by other node types. For example as a featured image, in custom fields, or in post_content.`\n        )\n      )\n    },\n  },\n  {\n    name: `excludeFields-renamed-to-excludeFieldNames`,\n    test: ({ userPluginOptions }) =>\n      userPluginOptions?.excludeFields?.length ||\n      userPluginOptions?.excludeFieldNames?.length,\n    processor: ({ helpers, userPluginOptions }) => {\n      if (userPluginOptions?.excludeFields?.length) {\n        helpers.reporter.log(``)\n        helpers.reporter.warn(\n          formatLogMessage(\n            // @todo\n            `\\n\\nPlugin options excludeFields has been renamed to excludeFieldNames.\\nBoth options work for now, but excludeFields will be removed in a future version\\n(likely when we get to beta) in favour of excludeFieldNames.\\n\\n`\n          )\n        )\n      }\n\n      store.dispatch.remoteSchema.addFieldsToBlackList(\n        userPluginOptions.excludeFieldNames || userPluginOptions.excludeFields\n      )\n\n      return userPluginOptions\n    },\n  },\n  {\n    name: `queryDepth-is-not-a-positive-int`,\n    test: ({ userPluginOptions }) =>\n      typeof userPluginOptions?.schema?.queryDepth !== `undefined` &&\n      (!isInteger(userPluginOptions?.schema?.queryDepth) ||\n        userPluginOptions?.schema?.queryDepth <= 0),\n    processor: ({ helpers, userPluginOptions }) => {\n      helpers.reporter.log(``)\n      helpers.reporter.warn(\n        formatLogMessage(\n          `\\n\\npluginOptions.schema.queryDepth is not a positive integer.\\nUsing default value in place of provided value.\\n`,\n          { useVerboseStyle: true }\n        )\n      )\n\n      delete userPluginOptions.schema.queryDepth\n\n      return userPluginOptions\n    },\n  },\n]\n\nexport const processAndValidatePluginOptions = (helpers, pluginOptions) => {\n  let userPluginOptions = {\n    ...pluginOptions,\n  }\n\n  optionsProcessors.forEach(({ test, processor, name }) => {\n    if (!name) {\n      helpers.reporter.panic(\n        formatLogMessage(\n          `Plugin option filter is unnamed\\n\\n${test.toString()}\\n\\n${processor.toString()}`\n        )\n      )\n    }\n\n    if (test({ helpers, userPluginOptions })) {\n      const filteredUserPluginOptions = processor({\n        helpers,\n        userPluginOptions,\n      })\n\n      if (filteredUserPluginOptions) {\n        userPluginOptions = filteredUserPluginOptions\n      } else {\n        helpers.reporter.panic(\n          formatLogMessage(\n            `Plugin option filter ${name} didn't return a filtered options object`\n          )\n        )\n      }\n    }\n  })\n\n  return userPluginOptions\n}\n"],"file":"process-and-validate-plugin-options.js"}