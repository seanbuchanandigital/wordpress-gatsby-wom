"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

const chalk = require('chalk');

const _require = require('./utils/axios'),
      getFormsAndFields = _require.getFormsAndFields;

const _require2 = require('./utils/processForms'),
      processForms = _require2.processForms;

const _require3 = require('./utils/basicAuthToURL'),
      addBasicAuthToURL = _require3.addBasicAuthToURL;

const log = console.log;
let activeEnv = process.env.GATSBY_ACTIVE_ENV || process.env.NODE_ENV || 'development'; // If we are in dev, ignore the fact that we are using a fake SSL certificate

if (activeEnv == 'development') {
  process.env.NODE_TLS_REJECT_UNAUTHORIZED = '0';
}

exports.sourceNodes =
/*#__PURE__*/
function () {
  var _ref = (0, _asyncToGenerator2.default)(function* ({
    actions: {
      createNode
    },
    createContentDigest,
    createNodeId
  }, {
    plugins,
    baseUrl,
    api,
    basicAuth = {
      username: '',
      password: ''
    },
    ignoreFields = ['notifications']
  }) {
    log(chalk.black.bgWhite('Starting Gravity Forms Source plugin')); // Run initial checks

    if (!baseUrl) {
      log(chalk.bgRed('We could not find a baseUrl in your gatsby-config.js'));
      return;
    }

    log(`Using: ${baseUrl}`);

    if (!api.key || !api.secret) {
      log(chalk.bgRed('You seem to be missing Gravity Forms API details in your gatsby-config.js'));
      return;
    } // Get a full object of forms and fields


    let formsObj = yield getFormsAndFields(basicAuth, api, addBasicAuthToURL(basicAuth, baseUrl)); // Check to make sure we got forms. If issues occured
    // need to stop here

    if (formsObj) {
      log(chalk.black.bgWhite('Processing forms'));

      for (var _i = 0, _Object$entries = Object.entries(formsObj); _i < _Object$entries.length; _i++) {
        const _Object$entries$_i = _Object$entries[_i],
              key = _Object$entries$_i[0],
              value = _Object$entries$_i[1];
        createNode(processForms(createContentDigest, createNodeId, formsObj[key], ignoreFields));
      }

      log(chalk.black.bgWhite('Completed Gravity Forms Source plugin'));
    }
  });

  return function (_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();